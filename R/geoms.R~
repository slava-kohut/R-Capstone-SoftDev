#testData <- data.frame(time = c(1, 3, 5, 10, 15, 18),
#                       y = 1:6,
#                       intensity = c(3, 1, 8, 2, 4, 7),
#                       casualties = c(1.5, 1.1, 1.2, 1.8, 3., 0.7),
#                       country = c('england', 'russia', 'france', 'russia', 'france', 'england'),
#                       labels = c('Aaa', 'Bbb', 'Ccc', 'Aaa', 'Ddd', 'Aaa'))

#ggplot(data = testData, aes(time, country, size = intensity, color = casualties, xmin = 0, xmax = 20)) +
#  geom_timeline_label(aes(label = as.character(labels)), nmax = 6) +
#  geom_timeline() +
#  theme_eq

StatTimeline <- ggproto("StatTimeline", Stat,
                        required_aes = c("x", "xmin", "xmax"),

                        compute_group = function(data, scales, nmax = nrow(data)){
                          
                          data <- data[data$x >= unique(data$xmin) & data$x <= unique(data$xmax), ]
                          data <- data[order(data$size, decreasing = TRUE), ]
                          
                          if (nmax > nrow(data)) nmax <- nrow(data)
                           data[1:nmax, ]
                        }

)

stat_timeline <- function(mapping = NULL, data = NULL, geom = NULL,
                           position = "identity", na.rm = FALSE, show.legend = NA,
                           inherit.aes = TRUE, ...) {
  layer(
    stat = StatTimeline,
    geom = geom,
    data = data,
    mapping = mapping,
    geom = geom,
    position = position,
    show.legend = show.legend,
    inherit.aes = inherit.aes,
    params = list(na.rm = na.rm, nmax = nmax, ...)
  )
}

GeomTimeline <- ggproto("GeomTimeline", Geom,
                           required_aes = c("x", "xmin", "xmax"),
                           
                           non_missing_aes = c("size", "shape", "colour"),
                          
                           default_aes = aes(
                            y = 0.5, shape = 19, colour = "black", size = 4, fill = NA,
                            alpha = NA, stroke = 0.5
                          ),
                          
                          
                           draw_key = draw_key_point,
                           
                           draw_group = function(data, panel_scales, coord) {
                             coords <- coord$transform(data, panel_scales)
                             
                             gTree(children = gList(
                             segmentsGrob(
                              x0 = min(coords$x),
                              y0 = min(coords$y),
                              x1 = max(coords$x),
                              y1 = max(coords$y),
                              gp = gpar(col = 'grey', alpha = 0.5, lwd = 3.)),
                             pointsGrob(
                               coords$x,
                               coords$y,
                               pch = coords$shape,
                               gp = gpar(
                                 col = alpha(coords$colour, coords$alpha),
                                 fill = alpha(coords$fill, coords$alpha),
                                 fontsize = coords$size * .pt + coords$stroke * .stroke / 2,
                                 lwd = coords$stroke * .stroke / 2))
                             ))
                           }
)

geom_timeline <- function(mapping = NULL, data = NULL,
                              position = "identity", na.rm = FALSE, show.legend = NA, 
                              inherit.aes = TRUE, ...) {
  layer(
    stat = StatTimeline,
    geom = GeomTimeline,
    mapping = mapping,
    data = data, 
    position = position, 
    show.legend = show.legend,
    inherit.aes = inherit.aes,
    params = list(na.rm = na.rm,...)
  )
}

GeomTimelineLabel <- ggproto("GeomTimeline", Geom,
                                 required_aes = c("x", "xmin", "xmax", "label"),

                                 
                                 default_aes = aes(y = 0.5),
                                 
                                 
                                 draw_key = draw_key_point,
                                 
                                 draw_group = function(data, panel_scales, coord) {
                                   coords <- coord$transform(data, panel_scales)
                                   
                                   gTree(children = gList(
                                   segmentsGrob(
                                     x0 = coords$x,
                                     y0 = coords$y,
                                     x1 = coords$x,
                                     y1 = coords$y + 0.05,
                                     gp = gpar(col = 'grey', alpha = 0.5, lwd = 2.)),
                                   textGrob(
                                     label = coords$label, 
                                     x = coords$x,
                                     y = coords$y + 0.1,
                                     just = 'top',
                                     rot = 45,
                                     gp = gpar(
                                       col = 'black',
                                       fontsize = 14
                                     )
                                    )))
                                   }
)

geom_timeline_label <- function(mapping = NULL, data = NULL,
                          position = "identity", na.rm = FALSE, show.legend = NA, 
                          inherit.aes = TRUE, ...) {
  layer(
    stat = StatTimeline,
    geom = GeomTimelineLabel,
    mapping = mapping,
    data = data, 
    position = position, 
    show.legend = show.legend,
    inherit.aes = inherit.aes,
    params = list(na.rm = na.rm,...)
  )
}

theme_eq <- theme_bw() + theme(panel.grid = element_blank(),
                               axis.title.y = element_blank(),
                               panel.border = element_blank(),
                               axis.line.y = element_blank(),
                               axis.ticks.y = element_blank(),
                               axis.line.x = element_line(colour = 'black'),
                               legend.position = 'bottom')


